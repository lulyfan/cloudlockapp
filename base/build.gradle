apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
configurations.all {//解决版本号冲突
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "${rootProject.ext.support_library}"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "com.android.support:appcompat-v7:${rootProject.ext.support_library}"
    api "com.android.support:design:${rootProject.ext.support_library}"
    api 'com.android.support.constraint:constraint-layout:1.1.3'
    //Arouter
    // Replace with the latest version
    api 'com.alibaba:arouter-api:1.4.1'
    //log工具
    implementation 'com.orhanobut:logger:2.2.0'
    api 'android.arch.lifecycle:extensions:1.1.1'

    api project(':commoncomponent')

    api('com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1') {
        exclude group: 'androidx.annotation', module: 'annotation'
    }
    //测试依赖
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
